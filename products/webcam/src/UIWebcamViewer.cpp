/*
    UIWebcamViewer.cpp
    

*/
//UIWebcamViewer.cpp generated by cbtek on 07-12-2017 at 05:23:08 PM

#include "UIWebcamViewer.h"
#include "ui_UIWebcamViewer.h"

#include <QPushButton>
#include <QComboBox>

namespace pf_projects {
namespace products {
namespace webcam {


UIWebcamViewer::UIWebcamViewer(QWidget *parent) :
    QWidget(parent),
    m_ui(new Ui_UIWebcamViewer)
{
    m_ui->setupUi(this);    
    m_currentCamera = nullptr;
    QObject::connect(m_ui->m_btnBrowseOutput,
                     SIGNAL(clicked),
                     this,
                     SLOT(onBrowseForCaptureOutput));

    QObject::connect(m_ui->m_cmbVideoSources,
                     SIGNAL(currentIndexChanged(int)),
                     this,
                     SLOT(onChangeVideoSource(int)));

    QObject::connect(m_ui->m_btnCaptureImage,
                     SIGNAL(clicked(bool)),
                     this,
                     SLOT(onCaptureImage()));

    m_availableCameraList = QCameraInfo::availableCameras();
    size_t index = 0;

    m_currentViewFinder  = new QCameraViewfinder;
    m_ui->m_frmVideoContainer->setLayout(new QVBoxLayout);
    m_ui->m_frmVideoContainer->layout()->addWidget(m_currentViewFinder);
    for (const auto& info : m_availableCameraList)
    {
        QString cameraLabel = info.description() + "("+info.deviceName()+")";
        m_ui->m_cmbVideoSources->addItem(cameraLabel,QVariant::fromValue(index));
        ++index;
    }

    if (m_availableCameraList.count())
    {
        onChangeVideoSource(0);
    }
}

UIWebcamViewer::~UIWebcamViewer()
{
    delete m_ui;
}

void UIWebcamViewer::onCaptureImage()
{

}

void UIWebcamViewer::onEnableAutoCapture()
{

}

void UIWebcamViewer::onChangeVideoSource(int index)
{
    if (index >=0 && index < m_availableCameraList.size())
    {
        QCameraInfo info = m_availableCameraList[index];
        if (m_currentCamera)
        {
            delete m_currentCamera;
        }
        m_currentCamera = new QCamera(info);
        m_currentCamera->setViewfinder(m_currentViewFinder);
        m_currentCamera->start();
    }
}

void UIWebcamViewer::onBrowseForCaptureOutput()
{

}
}}}//end namespace


/*
    TicTacToeBoard.cpp
    

*/
//----------------------------------------
//TicTacToeBoard.cpp generated by cbtek on 07-12-2017 at 11:27:10 AM
//----------------------------------------
#include "TicTacToeBoard.h"

#include "utility/inc/Exception.hpp"

#include <cmath>
#include <iostream>
#include <sstream>

namespace pf_projects {
namespace products {
namespace tic_tac_toe {


TicTacToeBoard::TicTacToeBoard()
{ 
}

void TicTacToeBoard::initialize()
{
    m_grid.clear();
    m_grid.resize(9);
    m_rowSize = 3;
    m_columnSize = 3;

    for (size_t r = 0; r < m_rowSize; ++r)
    {
        for (size_t c = 0; c < m_columnSize; ++c)
        {
             size_t index = getIndex(r, c);
             std::cerr << r<<","<<c<<" = " << index << std::endl;
             if (index < m_grid.size())
             {
                m_grid[index].setRow(r);
                m_grid[index].setColumn(c);
             }
        }
    }
}

std::string TicTacToeBoard::toString() const
{
    std::ostringstream out;
    for (const auto& cell: m_grid)
    {
        out << cell.toString() << std::endl;
    }
    return out.str();
}

const TicTacToeCell &TicTacToeBoard::getCell(int row, int column) const
{
    size_t index = getIndex(row, column);
    if (index < m_grid.size())
    {
        return m_grid[index];
    }

    std::ostringstream err;
    err << "Index out of range exception occured. Requested index="<<index<<" for range [0 - " << m_grid.size() << "]";
    THROW_GENERIC_EXCEPTION(err.str());
}

void TicTacToeBoard::setCell(int row, int column, const TicTacToeCell &cell)
{
    size_t index = getIndex(row, column);
    if (index < m_grid.size())
    {
        m_grid[index] = cell;
    }
}

const std::vector<TicTacToeCell> &TicTacToeBoard::getCells() const
{
    return m_grid;
}

TicTacToeBoard::~TicTacToeBoard()
{

}

size_t TicTacToeBoard::getIndex(int row, int column) const
{
    return 3 * row + column;
}

}}}//end namespace



/*
    UITicTacToeBoard.cpp
    

*/
//UITicTacToeBoard.cpp generated by cbtek on 07-13-2017 at 10:27:11 PM

#include "UITicTacToeBoard.h"
#include "ui_UITicTacToeBoard.h"

#include <QColor>
#include <QPainter>
#include <QTimer>

#include <iostream>

namespace pf_projects {
namespace products {
namespace tic_tac_toe {


UITicTacToeBoard::UITicTacToeBoard(QWidget *parent) :
    QWidget(parent),
    m_ui(new Ui_UITicTacToeBoard)
{
    m_ui->setupUi(this);
    QTimer::singleShot(10,this,SLOT(onInitialize()));
}

void UITicTacToeBoard::placeX(int row, int column)
{
    place(row,column,TicTacToeTokenType::X);
}

void UITicTacToeBoard::placeO(int row, int column)
{
    place(row,column,TicTacToeTokenType::O);
}

void UITicTacToeBoard::reset()
{
    m_ui->m_btnPos00->setIcon(QIcon());
    m_ui->m_btnPos10->setIcon(QIcon());
    m_ui->m_btnPos20->setIcon(QIcon());
    m_ui->m_btnPos01->setIcon(QIcon());
    m_ui->m_btnPos11->setIcon(QIcon());
    m_ui->m_btnPos21->setIcon(QIcon());
    m_ui->m_btnPos02->setIcon(QIcon());
    m_ui->m_btnPos12->setIcon(QIcon());
    m_ui->m_btnPos22->setIcon(QIcon());

    m_ui->m_btnPos00->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos10->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos20->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos01->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos11->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos21->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos02->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos12->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;
    m_ui->m_btnPos22->setProperty("class", static_cast<int>(TicTacToePlayerClass::NoPlayer));;


}

UITicTacToeBoard::~UITicTacToeBoard()
{
    delete m_ui;
}

void UITicTacToeBoard::createPlayerImages(QColor color)
{

    int size = width()/3;
    m_imgX = QImage(size,size,QImage::Format_ARGB32);
    m_imgO = QImage(size,size,QImage::Format_ARGB32);
    m_imgX.fill(Qt::transparent);
    m_imgO.fill(Qt::transparent);
    int penWidth = 32;
    QPen pen;
    QBrush brush;
    pen.setWidth(penWidth);
    pen.setColor(color);
    brush.setColor(color);

    QPainter g1(&m_imgX);
    g1.setPen(pen);
    g1.setBrush(brush);
    g1.drawLine(0,0,size,size);
    g1.drawLine(0,size,size,0);
    g1.end();

    QPainter g2(&m_imgO);
    g2.begin(&m_imgO);
    g2.setPen(pen);
    g2.drawEllipse(penWidth/2,penWidth/2,size-penWidth,size-penWidth);
    g2.end();
}

void UITicTacToeBoard::place(int row, int column, TicTacToeTokenType tokenType)
{
    QIcon xoIcon = QIcon(QPixmap::fromImage(tokenType == TicTacToeTokenType::X ? m_imgX : m_imgO));
    TicTacToePlayerClass playerClass = (tokenType == TicTacToeTokenType::X ? TicTacToePlayerClass::Player1 : TicTacToePlayerClass::Player2);

    if (row == 0 && column == 0)
    {
        m_ui->m_btnPos00->setIcon(xoIcon);
        m_ui->m_btnPos00->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 1 && column == 0)
    {
        m_ui->m_btnPos10->setIcon(xoIcon);
        m_ui->m_btnPos10->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 2 && column == 0)
    {
        m_ui->m_btnPos20->setIcon(xoIcon);
        m_ui->m_btnPos20->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 0 && column == 1)
    {
        m_ui->m_btnPos01->setIcon(xoIcon);
        m_ui->m_btnPos01->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 1 && column == 1)
    {
        m_ui->m_btnPos11->setIcon(xoIcon);
        m_ui->m_btnPos11->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 2 && column == 1)
    {
        m_ui->m_btnPos21->setIcon(xoIcon);
        m_ui->m_btnPos21->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 0 && column == 2)
    {
        m_ui->m_btnPos02->setIcon(xoIcon);
        m_ui->m_btnPos02->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 1 && column == 2)
    {
        m_ui->m_btnPos12->setIcon(xoIcon);
        m_ui->m_btnPos12->setProperty("class",static_cast<int>(playerClass));
    }
    else if (row == 2 && column == 2)
    {
        m_ui->m_btnPos22->setIcon(xoIcon);
        m_ui->m_btnPos22->setProperty("class",static_cast<int>(playerClass));
    }
}

void UITicTacToeBoard::resizeEvent(QResizeEvent *event)
{

}

void UITicTacToeBoard::onInitialize()
{
    createPlayerImages();
    reset();
    m_ui->m_btnPos00->setProperty("row",0);
    m_ui->m_btnPos10->setProperty("row",1);
    m_ui->m_btnPos20->setProperty("row",2);

    m_ui->m_btnPos01->setProperty("row",0);
    m_ui->m_btnPos11->setProperty("row",1);
    m_ui->m_btnPos21->setProperty("row",2);

    m_ui->m_btnPos02->setProperty("row",0);
    m_ui->m_btnPos12->setProperty("row",1);
    m_ui->m_btnPos22->setProperty("row",2);

    m_ui->m_btnPos00->setProperty("column",0);
    m_ui->m_btnPos10->setProperty("column",0);
    m_ui->m_btnPos20->setProperty("column",0);

    m_ui->m_btnPos01->setProperty("column",1);
    m_ui->m_btnPos11->setProperty("column",1);
    m_ui->m_btnPos21->setProperty("column",1);

    m_ui->m_btnPos02->setProperty("column",2);
    m_ui->m_btnPos12->setProperty("column",2);
    m_ui->m_btnPos22->setProperty("column",2);

    m_bgXOButtons.addButton(m_ui->m_btnPos00);
    m_bgXOButtons.addButton(m_ui->m_btnPos10);
    m_bgXOButtons.addButton(m_ui->m_btnPos20);
    m_bgXOButtons.addButton(m_ui->m_btnPos01);
    m_bgXOButtons.addButton(m_ui->m_btnPos11);
    m_bgXOButtons.addButton(m_ui->m_btnPos21);
    m_bgXOButtons.addButton(m_ui->m_btnPos02);
    m_bgXOButtons.addButton(m_ui->m_btnPos12);
    m_bgXOButtons.addButton(m_ui->m_btnPos22);

    int sizeW = width()/3;
    QSize size(sizeW,sizeW);
    m_ui->m_btnPos00->setIconSize(size);
    m_ui->m_btnPos10->setIconSize(size);
    m_ui->m_btnPos20->setIconSize(size);
    m_ui->m_btnPos01->setIconSize(size);
    m_ui->m_btnPos11->setIconSize(size);
    m_ui->m_btnPos21->setIconSize(size);
    m_ui->m_btnPos02->setIconSize(size);
    m_ui->m_btnPos12->setIconSize(size);
    m_ui->m_btnPos22->setIconSize(size);

    connect(&m_bgXOButtons,
            SIGNAL(buttonClicked(QAbstractButton*)),
            this,
            SLOT(onPlacementRequested(QAbstractButton*)));
}

void UITicTacToeBoard::onPlacementRequested(QAbstractButton *button)
{
    TicTacToePlayerClass playerClass = static_cast<TicTacToePlayerClass>(button->property("class").toInt());
    if (playerClass == TicTacToePlayerClass::NoPlayer)
    {
        int row = button->property("row").toInt();
        int column = button->property("column").toInt();
        emit mousePlacementRequested(row,column);
        std::cerr << "cell: " << row << ", " << column << std::endl;
    }
}
}}}//end namespace

